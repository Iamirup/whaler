services:
  eventor-microservice:
    image: iamirup/whaler-eventor-backend:latest
    build: ../../backend/microservices/eventor
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=web_net"
        - "traefik.http.routers.eventor-microservice.entrypoints=http"
        - "traefik.http.routers.eventor-microservice.rule=(Host(`whaler.ir`) && PathPrefix(`/api/eventor/v1`))"
        - "traefik.http.routers.eventor-microservice.middlewares=rate-limit"
        - "traefik.http.middlewares.rate-limit.ratelimit.average=15"
        - "traefik.http.middlewares.rate-limit.ratelimit.burst=5"
        - "traefik.http.middlewares.rate-limit.ratelimit.period=1m"
        - "traefik.http.middlewares.rate-limit.ratelimit.sourcecriterion.requestheadername=X-Forwarded-For"
        - "traefik.http.routers.eventor-microservice.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        - "traefik.http.routers.eventor-microservice-secure.entrypoints=https"
        - "traefik.http.routers.eventor-microservice-secure.rule=(Host(`whaler.ir`) && PathPrefix(`/api/eventor/v1`))"
        - "traefik.http.routers.eventor-microservice-secure.tls=true"
        - "traefik.http.routers.eventor-microservice-secure.tls.options=default"
        - "traefik.http.routers.eventor-microservice-secure.tls.certresolver=mycert"
        - "traefik.http.routers.eventor-microservice-secure.middlewares=rate-limit"
        - "traefik.http.services.eventor-microservice.loadbalancer.server.port=8080"
    depends_on:
      - rdbms
    networks:
      - web_net
      - whaler_eventor_net

  rdbms:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    volumes:
      - /whaler_eventor_data:/var/lib/postgresql/data
    networks:
      - whaler_eventor_net

networks:
  web_net:
    external: true
    name: web_net
    driver: overlay
  whaler_eventor_net:
    driver: overlay

volumes:
  whaler_data: