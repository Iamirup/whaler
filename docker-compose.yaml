services:
  whaler:
    container_name: whaler
    restart: unless-stopped
    build: .
    depends_on:
      - rdbms
    networks:
      - web_net
      - whaler_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.app.entrypoints=http"
      - "traefik.http.routers.app.rule=Host(`whaler.ir`)"
      - "traefik.http.routers.app-secure.rule=(Host(`whaler.ir`) && PathPrefix(`/api/v1`))"
      - "traefik.http.routers.app.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.app-secure.entrypoints=https"
      - "traefik.http.routers.app-secure.rule=(Host(`whaler.ir`) && PathPrefix(`/api/v1`))"
      - "traefik.http.routers.app-secure.tls=true"
      - "traefik.http.routers.app-secure.tls.options=default"
      - "traefik.http.routers.app-secure.tls.certresolver=mycert"
      - "traefik.http.services.app.loadbalancer.server.port=8080"

  rdbms:
    container_name: rdbms-whaler
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    volumes:
      - /whaler_data:/var/lib/postgresql/data
    networks:
      - whaler_net

networks:
  web_net:
    external: true
    name: web_net
  whaler_net:


volumes:
  whaler_data: